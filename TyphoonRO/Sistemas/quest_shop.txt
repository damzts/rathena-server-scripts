// prontera,155,180,6	script	Newsring	4_PORING,{
// mes "IF YOU STILL HAVE THE CLIENT WITH THE BANK BUTTON USE THE UPDATER";
// mes "(Get your gold out of the Bank first if you can.)"; sleep2 2400; next;
// mes "The server is undergoing heavy maintenance.";
// next;
// mes "Expect in-production shutdowns and random maintenances over the week.";
// next;
// mes "Even accounts wipeout for testing.";
// next;
// mes "The database with all your data was saved to this day to prevent data loss:";
// mes "10/8/2016";
// next; 
// mes "If you get an important item or something relevant, save a screenshot from it.";
// next;
// mes "If the data gets lost for some reason there will be no returns of anything ahead of the backup date without prove if the server has to rollback to the backup date.";
// next;
// mes "Your zeny on the bank was put on hold, don't panic. Its still there.";
// next;
// mes "The hairstyles we're also defaulted to the official ones (27) just wait. They'll get back.";
// next;
// mes "Also.. there is a lot of porings everywhere.. to prevent sprite errors I guess??";
// next;
// mes "Psh our admin is too lazy to post this on the forum or its just too busy?";
// next;
// mes "He doesnt even pay me!!"; close;
// }

//===== rAthena Script =======================================
//= Brasilis Dungeon Monster Spawn Script
//===== By: ==================================================
//= Kisuka
//===== Current Version: =====================================
//= 1.0
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= Official monster spawns in Brasilis Dungeon.
//===== Additional Comments: =================================
//= 1.0 Official spawns from Aegis [Kisuka]
//============================================================

//==================================================
// bra_dun01 - Behind the Waterfall
//==================================================
bra_dun01,0,0,0,0	monster	Piranha	2070,80,5000,0,0
bra_dun01,0,0,0,0	monster	Iara	2069,30,5000,0,0
bra_dun01,0,0,0,0	monster	Black Mushroom	1084,5,180000,90000,1
bra_dun01,0,0,0,0	monster	Marina	1141,20,5000,0,0
bra_dun01,0,0,0,0	monster	Kukre	1070,10,5000,0,0
bra_dun01,0,0,0,0	monster	Plankton	1161,10,5000,0,0
bra_dun01,0,0,0,0	monster	Hydra	1068,15,5000,0,0

//==================================================
// bra_dun02 - Behind the Waterfall
//==================================================
bra_dun02,0,0,0,0	monster	Piranha	2070,60,5000,0,0
bra_dun02,0,0,0,0	monster	Iara	2069,110,5000,0,0
bra_dun02,0,0,0,0	monster	Marina	1141,10,5000,0,0
bra_dun02,0,0,0,0	monster	Kukre	1070,10,5000,0,0
bra_dun02,0,0,0,0	monster	Plankton	1161,10,5000,0,0
bra_dun02,0,0,0,0	monster	Hydra	1068,15,5000,0,0
bra_dun02,0,0,0,0	monster	Shining Plant	1083,2,5000,0,0
bra_dun02,0,0,0,0	monster	Black Mushroom	1084,5,5000,0,0
bra_dun02,0,0,0,0	boss_monster	Boitata	2068,1,7200000,600000,1



//malaya,278,360,5	cash	vendo	909,502,10:503,15:504,20
// Shop NPCs -- supplying no argument displays entire menu.
//	callfunc "qshop"{,<shop ID>{,<shop ID>{,...}}};
//============================================================
// Ejemplo:
// mapa,coordenadaX,coordenadaY,Direccion(1 a 6)	script	Tienda Quest#(Shop ID)	(Sprite ID),{ callfunc "qshop",(Shop ID); }
//===============================

// NPC's (Dummy's)
// bat_room,160,150,3	script	Erundek	109,{
// mes "Hola!";
// mes "Yo te puedo cambiar tus medallas por objetos, solo dime que tipo de medalla quieres cambiar.";
// switch(select("Bravery Badges:Valor Badges:War/Heroism Badges")){
// case 1:
// callfunc "qshop",1;
// break;
// case 2:
// callfunc "qshop",3;
// break;
// case 3:
// callfunc "qshop",4;
// break;
// }
// }

prontera,122,164,6	script	Tienda Accesorios#2	4_F_KAFRA7,{ callfunc "qshop",2; }
prontera,130,165,3	script	Hada de las Alas	4_F_FAIRY2,{
	// Variables
	set	@name$,"[Wings Fairy]";
	
	// Quest Script
	mes @name$;
	mes "Hello, ^5555FF" + strcharinfo(0) + "^000000!~";
	mes "I can make the wings you want";
	next;
	mes @name$;
	mes "You only need to bring me some items that im going to ask for.";
	next;
	mes @name$;
	mes "I can also, create a Blue Card B.";
	next;
	mes "This card is for evolving your wings to F2, when you have all the items for them.";
	next;
	mes @name$;
	mes "What do you want to do?";
	switch(select("Create wings:I want a Blue Card B")){
		case 1: break;
		
		case 2:
		next;
		if (countitem(27001) || countitem(27002) || countitem(27003) || countitem(27004) || countitem(27005) || countitem(27006) || countitem(27007) || countitem(27008) || countitem(27009) || countitem(27010) || countitem(27011) || countitem(27012) || countitem(27013)){
			mes @name$;
			mes "Are you sure you want to exchange your wings for a Blue Card B?. (There is no going back)";
			next;
			switch(select("No:Yes")){
				case 1: mes @name$; mes "Good."; close;
				case 2: 
				.@conteo = countitem(27001) + countitem(27002) + countitem(27003) + countitem(27004) + countitem(27005) + countitem(27006) + countitem(27007) + countitem(27008) + countitem(27009) + countitem(27010) + countitem(27011) + countitem(27012) + countitem(27013);
				if (.@conteo > 1) { mes @name$; mes "Bring only one pair of wings to continue.";} else {
					mes @name$;
					mes "There you have it!.";
					if (countitem(27001))
					delitem 27001,1;
					if (countitem(27002))
					delitem 27002,1;
					if (countitem(27003))
					delitem 27003,1;
					if (countitem(27004))
					delitem 27004,1;
					if (countitem(27005))
					delitem 27005,1;
					if (countitem(27006))
					delitem 27006,1;
					if (countitem(27007))
					delitem 27007,1;
					if (countitem(27008))
					delitem 27008,1;
					if (countitem(27009))
					delitem 27009,1;
					if (countitem(27010))
					delitem 27010,1;
					if (countitem(27011))
					delitem 27011,1;
					if (countitem(27012))
					delitem 27012,1;
					if (countitem(27013))
					delitem 27013,1;
					getitem 6011,1;
					} close;
			}
		} else { mes @name$; mes "Im sorry, you don't seem to have any pair of wings with you."; close;} 
	}
	mes @name$;
	mes "Select a pair of wings";
	close2;
	callfunc "qshop",7;
	}
prontera,126,165,6	script	Diosa de las Alas#6	4_M_FARIYKING,{ mes "I have been dispatched here to give you great items."; mes "but we need things that we can only find in this world in exchange."; next; mes "I'll show you the list of items that I can make."; close2; callfunc "qshop",6; }
// mapa,coordenadaX,coordenadaY,Direccion	script	Tienda Quest#7	909,{ callfunc "qshop",7; }
prontera,119,161,5	script	Tienda Premier#8	1_M_BARD,{ callfunc "qshop",8; }
// mapa,coordenadaX,coordenadaY,Direccion	script	Tienda Quest#9	909,{ callfunc "qshop",9; }

// Script Core
//============================================================
-	script	quest_shop	-1,{ 
function Add; function Chk; function Slot; function A_An;
OnInit:
	freeloop(1);

// -----------------------------------------------------------
//  Basic shop settings.
// -----------------------------------------------------------

	set .Announce,1;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,1;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .ShowID,1;  	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,0;	// Show Zeny cost, if any? (1: yes / 0: no)
	set .MaxStack,1000;	// Max number of quest items purchased at one time.

// -----------------------------------------------------------
//  Points variable -- optional quest requirement.
//	setarray .Points$[0],"<variable name>","<display name>";
// -----------------------------------------------------------

	setarray .Points$[0],"#CASHPOINTS","Cash Points";

// -----------------------------------------------------------
//  Shop IDs -- to add shops, copy dummy data at bottom of file.
//	setarray .Shops$[1],"<Shop 1>","<Shop 2>"{,...};
// -----------------------------------------------------------

	setarray .Shops$[1],"1","2","3","4","5","6","7","8","9";

// -----------------------------------------------------------
//  Quest items -- do NOT use a reward item more than once!
//	Add(<shop ID>,<reward ID>,<reward amount>,
//	    <Zeny cost>,<point cost>,
//	    <required item ID>,<required item amount>{,...});
// -----------------------------------------------------------

// Formato
// Add(<shop ID>,<reward ID>,<reward amount>,<Zeny cost>,<cash cost>,<required item ID>,<required item amount>{,...});
	
	// Add(1,<reward ID>,<reward amount>,<Zeny cost>,<cash cost>,<required item ID>,<required item amount>{,...});
	// Quest Hats
	// Add(1,21003,1,4000000,0,7300,1,7513,1,7435,50,6022,1,1008,1,7113,1,714,5,7295,3,706,2,7290,5,7441,50,7440,50,7451,3,5019,1,7036,3,7566,1,7108,1);
	Add(1,13036,1,0,0,7828,100);
	Add(1,13411,1,0,0,7828,100);
	Add(1,1425,1,0,0,7828,100);
	Add(1,1632,1,0,0,7828,100);
	Add(1,1634,1,0,0,7828,100);
	Add(1,1543,1,0,0,7828,100);
	Add(1,1924,1,0,0,7828,100);
	Add(1,1978,1,0,0,7828,100);
	Add(1,1574,1,0,0,7828,100);
	Add(1,1824,1,0,0,7828,100);
	Add(1,1183,1,0,0,7828,100);
	Add(1,1380,1,0,0,7828,100);
	Add(1,13305,1,0,0,7828,100);
	Add(1,1279,1,0,0,7828,100);
	Add(1,1739,1,0,0,7828,100);
	Add(1,13108,1,0,0,7828,100);
	Add(1,13172,1,0,0,7828,100);
	Add(1,2538,1,0,0,7828,50);
	Add(1,2539,1,0,0,7828,50);
	Add(1,2540,1,0,0,7828,50);
	Add(1,2435,1,0,0,7828,50);
	Add(1,2436,1,0,0,7828,50);
	Add(1,2437,1,0,0,7828,50);
	Add(1,2376,1,0,0,7828,80);
	Add(1,2377,1,0,0,7828,80);
	Add(1,2378,1,0,0,7828,80);
	Add(1,2379,1,0,0,7828,80);
	Add(1,2380,1,0,0,7828,80);
	Add(1,2381,1,0,0,7828,80);
	Add(1,2382,1,0,0,7828,80);
	Add(1,2720,1,0,0,7828,500);
	Add(1,2721,1,0,0,7828,500);
	Add(1,2722,1,0,0,7828,500);
	Add(1,2723,1,0,0,7828,500);
	Add(1,2724,1,0,0,7828,500);
	Add(1,2725,1,0,0,7828,500);
	Add(1,2733,1,0,0,7828,500);
	
	// Valor
	Add(3,13037,1,0,0,7829,100);
	Add(3,13410,1,0,0,7829,100);
	Add(3,1633,1,0,0,7829,100);
	Add(3,1635,1,0,0,7829,100);
	Add(3,1542,1,0,0,7829,100);
	Add(3,1923,1,0,0,7829,100);
	Add(3,1977,1,0,0,7829,100);
	Add(3,1575,1,0,0,7829,100);
	Add(3,1823,1,0,0,7829,100);
	Add(3,1184,1,0,0,7829,100);
	Add(3,1482,1,0,0,7829,100);
	Add(3,1379,1,0,0,7829,100);
	Add(3,13306,1,0,0,7829,100);
	Add(3,1280,1,0,0,7829,100);
	Add(3,1738,1,0,0,7829,100);
	Add(3,13171,1,0,0,7829,100);
	Add(3,13173,1,0,0,7829,100);
	Add(3,13174,1,0,0,7829,100);
	Add(3,2538,1,0,0,7829,50);
	Add(3,2539,1,0,0,7829,50);
	Add(3,2540,1,0,0,7829,50);
	Add(3,2435,1,0,0,7829,50);
	Add(3,2436,1,0,0,7829,50);
	Add(3,2437,1,0,0,7829,50);
	Add(3,2376,1,0,0,7829,80);
	Add(3,2377,1,0,0,7829,80);
	Add(3,2378,1,0,0,7829,80);
	Add(3,2379,1,0,0,7829,80);
	Add(3,2380,1,0,0,7829,80);
	Add(3,2381,1,0,0,7829,80);
	Add(3,2382,1,0,0,7829,80);
	Add(3,2720,1,0,0,7829,500);
	Add(3,2721,1,0,0,7829,500);
	Add(3,2722,1,0,0,7829,500);
	Add(3,2723,1,0,0,7829,500);
	Add(3,2724,1,0,0,7829,500);
	Add(3,2725,1,0,0,7829,500);
	Add(3,2733,1,0,0,7829,500);
	
	// Heroism Badges / War
	Add(4,1187,1,0,0,7773,2000);
	Add(4,1281,1,0,0,7773,2000);
	Add(4,1282,1,0,0,7773,2000);
	Add(4,1310,1,0,0,7773,2000);
	Add(4,1382,1,0,0,7773,2000);
	Add(4,1426,1,0,0,7773,2000);
	Add(4,1486,1,0,0,7773,2000);
	Add(4,1546,1,0,0,7773,2000);
	Add(4,1576,1,0,0,7773,2000);
	Add(4,1577,1,0,0,7773,2000);
	Add(4,1640,1,0,0,7773,2000);
	Add(4,1641,1,0,0,7773,2000);
	Add(4,1743,1,0,0,7773,2000);
	Add(4,1826,1,0,0,7773,2000);
	Add(4,1827,1,0,0,7773,2000);
	Add(4,1927,1,0,0,7773,2000);
	Add(4,1981,1,0,0,7773,2000);
	Add(4,2002,1,0,0,7773,2000);
	Add(4,13042,1,0,0,7773,2000);
	Add(4,13110,1,0,0,7773,2000);
	Add(4,13176,1,0,0,7773,2000);
	Add(4,13177,1,0,0,7773,2000);
	Add(4,13178,1,0,0,7773,2000);
	Add(4,13179,1,0,0,7773,2000);
	Add(4,13307,1,0,0,7773,2000);
	Add(4,13416,1,0,0,7773,2000);
	Add(4,13417,1,0,0,7773,2000);
	Add(4,13418,1,0,0,7773,2000);
	Add(4,2394,1,0,0,7773,840);
	Add(4,2395,1,0,0,7773,170);
	Add(4,2396,1,0,0,7773,25);
	Add(4,2444,1,0,0,7773,580);
	Add(4,2445,1,0,0,7773,70);
	Add(4,2446,1,0,0,7773,15);
	Add(4,2549,1,0,0,7773,630);
	Add(4,2772,1,0,0,7773,1200);
	Add(4,2773,1,0,0,7773,280);
	Add(4,2774,1,0,0,7773,40);
	// Alas
	// Add(4,22036,1,999999999,0,730,1,7291,2,7294,2,7003,100,720,10,26021,40,7066,100,6033,1,931,100,1035,100,7293,1,7539,500);


	// Items de Creacion
	// Add(3,713,1,70,0);

	// Alas
	// Add(4,22036,1,999999999,0,730,1,7291,2,7294,2,7003,100,720,10,26021,40,7066,100,6033,1,931,100,1035,100,7293,1,7539,500);


	// Sunglasses [1]
	Add(2,2202,1,1500000,0,936,100,7209,10,1044,50,2201,1);
	Add(2,2789,1,1000000,0,6090,50,2601,1,2621,1,2603,2,1008,20);
	Add(2,2788,1,1000000,0,6090,50,2602,1,2622,1,2604,1,2624,1);
	Add(2,2790,1,1000000,0,6090,50,2605,1,2625,1,2618,1);
	Add(2,5013,1,8000000,0,26021,30,7211,1,7451,1,714,10,7005,1,734,1,2268,1,5053,1,2613,1,968,1,923,1,7020,1,7036,1,741,1,752,1,742,1,743,1,754,1,753,1,751,1,750,1);
	Add(2,7859,1,5000000,10,7112,50,7111,50,1024,50);
	Add(2,13607,1,20000000,5,7539,1500);
	Add(2,14533,1,10000000,1,7539,100);
	
	// Add(<shop ID>,<reward ID>,<reward amount>,<Zeny cost>,<cash cost>,<required item ID>,<required item amount>{,...});
	
	// Tienda Cash

	Add(5,5569,1,1,90,7539,1);
	Add(5,5545,1,1,90,7539,1);
	Add(5,5546,1,1,90,7539,1);
	Add(5,5600,1,1,90,7539,1);
	Add(5,18600,1,1,90,7539,1);
	Add(5,5495,1,1,90,7539,1);
	Add(5,5297,1,1,90,7539,1);
	Add(5,5387,1,1,90,7539,1);
	Add(5,5286,1,1,90,7539,1);
	Add(5,5583,1,1,90,7539,1);
	Add(5,5550,1,1,90,7539,1);
	Add(5,5549,1,1,90,7539,1);
	Add(5,5138,1,1,90,7539,1);
	Add(5,5198,1,1,90,7539,1);
	Add(5,5421,1,1,30,7539,1);
	Add(5,5315,1,1,30,7539,1);
	// Add(5,24007,1,1,30,7539,1);
	Add(5,12208,1,1,4,7539,1);
	Add(5,12900,1,1,25,7539,1);
	Add(5,13696,1,1,60,7539,1);
	Add(5,5013,1,1,90,7539,1);
	
	// Add(<shop ID>,<reward ID>,<reward amount>,<Zeny cost>,<cash cost>,<required item ID>,<required item amount>{,...});
	
	// Quest Alas G2

	Add(6,27031,1,25000000,0,6011,1,7539,4000,7020,2,7023,30,7436,15,7439,15,7511,150,6022,5,1168,1,994,300);
	Add(6,27032,1,25000000,0,6011,1,7539,4000,7020,2,7752,500,5160,2,7436,15,7439,15,607,200,2537,1);
	Add(6,27021,1,25000000,0,6011,1,7539,4000,7020,2,995,50,7561,500,749,20,1731,1,1256,1,7562,3,7292,15,7437,15);
	Add(6,27022,1,25000000,0,6011,1,7539,4000,7020,2,7451,5,7345,500,7510,20,7024,10,5808,1,7562,3,7798,150);
	Add(6,27024,1,25000000,0,6011,1,7539,4000,7020,2,7440,150,7441,150,923,150,996,500,1964,1,1904,1,2746,2,1722,5,1926,1);
	Add(6,27025,1,25000000,0,6011,1,7539,4000,7020,2,7440,150,7441,150,923,150,996,500,1964,1,1904,1,2746,2,1722,5,1926,1);
	Add(6,27026,1,25000000,0,6011,1,7539,4000,7020,2,7444,30,7437,15,1730,1,7122,300,7441,100,7063,100,7440,100,2554,1);
	Add(6,27027,1,25000000,0,6011,1,7539,4000,7020,2,714,5,7511,400,1141,3,7438,15,7023,15,1036,300);
	Add(6,27028,1,25000000,0,6011,1,7539,4000,7020,2,7299,15,2364,5,2513,3,7568,300,7063,200,7097,200,6033,5,639,20);
	Add(6,27029,1,25000000,0,6011,1,7539,4000,7020,2,1557,3,7300,10,7054,300,7513,5,7446,200,616,10,12374,10,1556,5);
	Add(6,27030,1,25000000,0,6011,1,7539,4000,7020,2,7299,15,2364,5,2513,3,7568,300,7063,200,7097,200,6033,5,639,20);
	Add(6,27080,1,25000000,0,6011,1,7539,4000,7020,2,7211,5,2115,3,7198,15,7117,300,7114,5,1009,20);
	Add(6,27033,1,25000000,0,6011,1,7539,4000,7020,2,1369,1,1365,5,1387,3,6022,5,7297,5,7122,300,7436,15);
	Add(6,27034,1,25000000,0,6011,1,7539,4000,7020,2,6022,5,7451,5,7562,5,7063,300,7297,10,7292,10,7295,10,7754,5);
	Add(6,27035,1,25000000,0,6011,1,7539,4000,7020,2,1626,5,7446,10,12080,5,748,30,2677,2,7566,7,7752,200);
	Add(6,27036,1,25000000,0,6011,1,7539,4000,7020,2,7299,15,2364,5,2513,3,7568,300,7063,200,7097,200,6033,5,639,20);
	Add(6,27137,1,25000000,0,6011,1,7539,4000,7020,2,510,500,511,500,507,500,509,500,508,500,7291,15,7294,15,5125,1,2420,1,2521,1,2116,1,2355,1);
	
	// Add(6,2410,1,250000000,0,7539,2800,7211,10);

	
	//Alas G1
	Add(7,27001,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27002,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27003,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27004,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27005,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27006,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27007,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27008,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27009,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27010,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27011,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27012,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	Add(7,27013,1,0,0,732,1,1058,20,7064,30,7168,75,7101,30,7539,1500);
	// Add(7,6011,1,0,0,6011||27002,1);
	
	//Tienda Quest
	// Add(8,18600,1,0,50000);
	// Add(8,18596,1,0,50000);
	// Add(8,18595,1,0,50000);
	 // Add(8,5824,1,0,50000);
	 // Add(8,5411,1,0,50000);
	 // Add(8,5146,1,0,50000);
	 // Add(8,5792,1,0,50000);
	 // Add(8,5781,1,0,50000);
	 // Add(8,5742,1,0,50000);
	 // Add(8,5692,1,0,50000);
	 // Add(8,5690,1,0,50000);
	 // Add(8,5671,1,0,50000);
	 // Add(8,5665,1,0,50000);
	 // Add(8,5660,1,0,50000);
	 // Add(8,5658,1,0,50000);
	 // Add(8,5654,1,0,50000);
	 // Add(8,5605,1,0,50000);
	 // Add(8,5590,1,0,50000);
	 // Add(8,5584,1,0,50000);
	 // Add(8,5583,1,0,50000);
	 // Add(8,5572,1,0,50000);
	 Add(8,27150,1,12000000,0,7539,2000);
	 Add(8,27151,1,12000000,0,7539,2000);
	 Add(8,27152,1,12000000,0,7539,2000);
	 Add(8,27153,1,12000000,0,7539,2000);
	 Add(8,27154,1,12000000,0,7539,2000);
	 Add(8,27155,1,12000000,0,7539,2000);
	 Add(8,27156,1,12000000,0,7539,2000);
	 Add(8,27157,1,12000000,0,7539,2000);
	 Add(8,27158,1,12000000,0,7539,2000);
	 Add(8,27159,1,12000000,0,7539,2000);
	 Add(8,27160,1,12000000,0,7539,2000);
	 Add(8,27161,1,12000000,0,7539,2000);
	 Add(8,27162,1,12000000,0,7539,2000);
	 Add(8,27163,1,12000000,0,7539,2000);
	 Add(8,27164,1,12000000,0,7539,2000);
	 Add(8,27165,1,12000000,0,7539,2000);
	 Add(8,27166,1,12000000,0,7539,2000);
	 Add(8,27167,1,12000000,0,7539,2000);
	 Add(8,27168,1,12000000,0,7539,2000);
	 Add(8,27169,1,12000000,0,7539,2000);
	 Add(8,27170,1,12000000,0,7539,2000);
	 Add(8,27171,1,12000000,0,7539,2000);
	 Add(8,27172,1,12000000,0,7539,2000);
	 Add(8,27173,1,12000000,0,7539,2000);
	 Add(8,27174,1,12000000,0,7539,2000);
	 Add(8,27175,1,12000000,0,7539,2000);
	 Add(8,27176,1,12000000,0,7539,2000);
	 Add(8,27177,1,12000000,0,7539,2000);
	 Add(8,27178,1,12000000,0,7539,2000);
	 Add(8,27179,1,12000000,0,7539,2000);
	 Add(8,27180,1,12000000,0,7539,2000);
	 Add(8,27181,1,12000000,0,7539,2000);
	 Add(8,27182,1,12000000,0,7539,2000);
	 Add(8,27183,1,12000000,0,7539,2000);
	 Add(8,27184,1,12000000,0,7539,2000);
	 Add(8,27185,1,12000000,0,7539,2000);
	 Add(8,27186,1,12000000,0,7539,2000);
	 Add(8,27187,1,12000000,0,7539,2000);
	 Add(8,27188,1,12000000,0,7539,2000);
	 Add(8,27189,1,12000000,0,7539,2000);
	 Add(8,27190,1,12000000,0,7539,2000);
	 Add(8,27191,1,12000000,0,7539,2000);
	 Add(8,27192,1,12000000,0,7539,2000);
	 Add(8,27193,1,12000000,0,7539,2000);
	 Add(8,27194,1,12000000,0,7539,2000);
	 Add(8,27196,1,12000000,0,7539,2000);
	 Add(8,27197,1,12000000,0,7539,2000);
	 Add(8,27198,1,12000000,0,7539,2000);
	 Add(8,27199,1,12000000,0,7539,2000);
	 Add(8,27200,1,12000000,0,7539,2000);
	 Add(8,27201,1,12000000,0,7539,2000);
	 Add(8,27202,1,12000000,0,7539,2000);
	 Add(8,27203,1,12000000,0,7539,2000);
	 Add(8,27204,1,12000000,0,7539,2000);
	 Add(8,27205,1,12000000,0,7539,2000);
	 Add(8,27206,1,12000000,0,7539,2000);
	 Add(8,27207,1,12000000,0,7539,2000);
	 Add(8,27208,1,12000000,0,7539,2000);
	 Add(8,27209,1,12000000,0,7539,2000);
	 Add(8,272,1,12000000,0,7539,2000);
	 Add(8,27212,1,12000000,0,7539,2000);
	 Add(8,27213,1,12000000,0,7539,2000);
	 Add(8,27214,1,12000000,0,7539,2000);
	 Add(8,27216,1,12000000,0,7539,2000);
	 Add(8,27217,1,12000000,0,7539,2000);
	 Add(8,27218,1,12000000,0,7539,2000);
	 Add(8,27219,1,12000000,0,7539,2000);
	 Add(8,27220,1,12000000,0,7539,2000);
	 Add(8,27221,1,12000000,0,7539,2000);
	 Add(8,27222,1,12000000,0,7539,2000);
	 Add(8,27223,1,12000000,0,7539,2000);
	 Add(8,27224,1,12000000,0,7539,2000);
	 Add(8,27225,1,12000000,0,7539,2000);
	 Add(8,27226,1,12000000,0,7539,2000);
	 Add(8,27227,1,12000000,0,7539,2000);
	 Add(8,27228,1,12000000,0,7539,2000);
	 Add(8,27229,1,12000000,0,7539,2000);
	 Add(8,27230,1,12000000,0,7539,2000);
	 Add(8,27231,1,12000000,0,7539,2000);
	 Add(8,27232,1,12000000,0,7539,2000);
	 Add(8,27233,1,12000000,0,7539,2000);
	 Add(8,27234,1,12000000,0,7539,2000);
	 Add(8,27235,1,12000000,0,7539,2000);
	 Add(8,27236,1,12000000,0,7539,2000);
	 Add(8,27237,1,12000000,0,7539,2000);
	 Add(8,27238,1,12000000,0,7539,2000);
	 Add(8,27239,1,12000000,0,7539,2000);
	 Add(8,27240,1,12000000,0,7539,2000);
	 Add(8,27241,1,12000000,0,7539,2000);
	 Add(8,27242,1,12000000,0,7539,2000);
	 Add(8,27243,1,12000000,0,7539,2000);
	 Add(8,27244,1,12000000,0,7539,2000);
	 Add(8,27245,1,12000000,0,7539,2000);
	 Add(8,27246,1,12000000,0,7539,2000);
	 Add(8,27247,1,12000000,0,7539,2000);
	 Add(8,27248,1,12000000,0,7539,2000);
	 Add(8,27250,1,12000000,0,7539,2000);
	 Add(8,27251,1,12000000,0,7539,2000);
	 Add(8,27252,1,12000000,0,7539,2000);
	 Add(8,27253,1,12000000,0,7539,2000);
	 Add(8,27255,1,12000000,0,7539,2000);
	 Add(8,27256,1,12000000,0,7539,2000);
	 Add(8,27257,1,12000000,0,7539,2000);
	 Add(8,27258,1,12000000,0,7539,2000);
	 Add(8,27259,1,12000000,0,7539,2000);
	 Add(8,27260,1,12000000,0,7539,2000);
	 Add(8,27261,1,12000000,0,7539,2000);
	 Add(8,27262,1,12000000,0,7539,2000);
	 Add(8,27263,1,12000000,0,7539,2000);
	 Add(8,27264,1,12000000,0,7539,2000);
	 Add(8,27265,1,12000000,0,7539,2000);
	 Add(8,27266,1,12000000,0,7539,2000);
	 Add(8,27267,1,12000000,0,7539,2000);
	 Add(8,27269,1,12000000,0,7539,2000);
	 Add(8,27270,1,12000000,0,7539,2000);
	 Add(8,27271,1,12000000,0,7539,2000);
	 Add(8,27272,1,12000000,0,7539,2000);
	 Add(8,27273,1,12000000,0,7539,2000);
	 Add(8,27274,1,12000000,0,7539,2000);
	 Add(8,27275,1,12000000,0,7539,2000);
	 Add(8,27276,1,12000000,0,7539,2000);
	 Add(8,27277,1,12000000,0,7539,2000);
	 Add(8,27278,1,12000000,0,7539,2000);
	 Add(8,27279,1,12000000,0,7539,2000);
	 Add(8,27280,1,12000000,0,7539,2000);
	 Add(8,27281,1,12000000,0,7539,2000);
	 Add(8,27282,1,12000000,0,7539,2000);
	 Add(8,27283,1,12000000,0,7539,2000);
	 Add(8,27284,1,12000000,0,7539,2000);
	 Add(8,27285,1,12000000,0,7539,2000);
	 Add(8,27286,1,12000000,0,7539,2000);
	 Add(8,27287,1,12000000,0,7539,2000);
	 Add(8,27288,1,12000000,0,7539,2000);
	 Add(8,27289,1,12000000,0,7539,2000);
	 Add(8,27290,1,12000000,0,7539,2000);
	 Add(8,27291,1,12000000,0,7539,2000);
	 Add(8,27292,1,12000000,0,7539,2000);
	 Add(8,27293,1,12000000,0,7539,2000);
	 Add(8,27294,1,12000000,0,7539,2000);
	 Add(8,27295,1,12000000,0,7539,2000);
	 Add(8,27296,1,12000000,0,7539,2000);
	 Add(8,27297,1,12000000,0,7539,2000);
	 Add(8,27298,1,12000000,0,7539,2000);
	 Add(8,27299,1,12000000,0,7539,2000);
	 Add(8,27300,1,12000000,0,7539,2000);
	 Add(8,27301,1,12000000,0,7539,2000);
	 Add(8,27302,1,12000000,0,7539,2000);
	 Add(8,27303,1,12000000,0,7539,2000);
	 Add(8,27304,1,12000000,0,7539,2000);
	 Add(8,27305,1,12000000,0,7539,2000);
	 Add(8,27306,1,12000000,0,7539,2000);
	 Add(8,27307,1,12000000,0,7539,2000);
	 Add(8,27308,1,12000000,0,7539,2000);
	 Add(8,27309,1,12000000,0,7539,2000);
	 Add(8,273,1,12000000,0,7539,2000);
	 Add(8,27311,1,12000000,0,7539,2000);
	 Add(8,27312,1,12000000,0,7539,2000);
	 Add(8,27313,1,12000000,0,7539,2000);
	 Add(8,27314,1,12000000,0,7539,2000);
	 Add(8,27315,1,12000000,0,7539,2000);
	 Add(8,27316,1,12000000,0,7539,2000);
	 Add(8,27317,1,12000000,0,7539,2000);
	 Add(8,27318,1,12000000,0,7539,2000);
	 Add(8,27319,1,12000000,0,7539,2000);
	 Add(8,27320,1,12000000,0,7539,2000);
	 Add(8,27321,1,12000000,0,7539,2000);
	 Add(8,27322,1,12000000,0,7539,2000);
	 Add(8,27323,1,12000000,0,7539,2000);
	 Add(8,27324,1,12000000,0,7539,2000);
	 Add(8,27325,1,12000000,0,7539,2000);
	 Add(8,27326,1,12000000,0,7539,2000);
	 Add(8,27327,1,12000000,0,7539,2000);
	 Add(8,27328,1,12000000,0,7539,2000);
	 Add(8,27329,1,12000000,0,7539,2000);
	 Add(8,27330,1,12000000,0,7539,2000);
	 Add(8,27331,1,12000000,0,7539,2000);
	 Add(8,27332,1,12000000,0,7539,2000);
	 Add(8,27333,1,12000000,0,7539,2000);
	 Add(8,27334,1,12000000,0,7539,2000);
	 Add(8,27335,1,12000000,0,7539,2000);
	 Add(8,27336,1,12000000,0,7539,2000);
	 Add(8,27337,1,12000000,0,7539,2000);
	 Add(8,27338,1,12000000,0,7539,2000);
	 Add(8,27339,1,12000000,0,7539,2000);
	 Add(8,27340,1,12000000,0,7539,2000);
	 Add(8,27341,1,12000000,0,7539,2000);
	 Add(8,27342,1,12000000,0,7539,2000);
	 Add(8,27343,1,12000000,0,7539,2000);
	 Add(8,27344,1,12000000,0,7539,2000);
	 Add(8,27345,1,12000000,0,7539,2000);
	 Add(8,27346,1,12000000,0,7539,2000);
	 Add(8,27347,1,12000000,0,7539,2000);
	 Add(8,27348,1,12000000,0,7539,2000);
	 Add(8,27349,1,12000000,0,7539,2000);
	 Add(8,27350,1,12000000,0,7539,2000);
	 Add(8,27351,1,12000000,0,7539,2000);
	 Add(8,27352,1,12000000,0,7539,2000);
	 Add(8,27353,1,12000000,0,7539,2000);
	 Add(8,27354,1,12000000,0,7539,2000);
	 Add(8,27355,1,12000000,0,7539,2000);
	 Add(8,27356,1,12000000,0,7539,2000);
	 Add(8,27357,1,12000000,0,7539,2000);
	 Add(8,27358,1,12000000,0,7539,2000);
	 Add(8,27359,1,12000000,0,7539,2000);
	 Add(8,27360,1,12000000,0,7539,2000);
	 Add(8,27361,1,12000000,0,7539,2000);
	 Add(8,27362,1,12000000,0,7539,2000);
	 Add(8,27363,1,12000000,0,7539,2000);
	 Add(8,27364,1,12000000,0,7539,2000);
	 Add(8,27365,1,12000000,0,7539,2000);
	 Add(8,27366,1,12000000,0,7539,2000);
	 Add(8,27367,1,12000000,0,7539,2000);
	 
	 Add(8,27368,1,12000000,0,7539,2000);
	 Add(8,27369,1,12000000,0,7539,2000);
	 Add(8,27370,1,12000000,0,7539,2000);
	 // Add(8,27371,1,12000000,0,7539,2500,,80);
	 Add(8,27372,1,12000000,0,7539,2000);
	 Add(8,27373,1,12000000,0,7539,2000);
	 Add(8,27374,1,12000000,0,7539,2000);
	 Add(8,27375,1,12000000,0,7539,2000);
	 Add(8,27376,1,12000000,0,7539,2000);
	 Add(8,27377,1,12000000,0,7539,2000);
	 Add(8,27378,1,12000000,0,7539,2000);
	 Add(8,27379,1,12000000,0,7539,2000);
	 Add(8,27380,1,12000000,0,7539,2000);
	 Add(8,27381,1,12000000,0,7539,2000);
	 Add(8,27382,1,12000000,0,7539,2000);
	 Add(8,27383,1,12000000,0,7539,2000);
	 Add(8,27384,1,12000000,0,7539,2000);
	 Add(8,27385,1,12000000,0,7539,2000);
	 Add(8,27386,1,12000000,0,7539,2000);
	 Add(8,27388,1,12000000,0,7539,2000);
	 Add(8,27389,1,12000000,0,7539,2000);
	 Add(8,27390,1,12000000,0,7539,2000);
	 Add(8,27391,1,12000000,0,7539,2000);
	 Add(8,27392,1,12000000,0,7539,2000);
	 Add(8,27393,1,12000000,0,7539,2000);
	 Add(8,27394,1,12000000,0,7539,2000);
	 Add(8,27396,1,12000000,0,7539,2000);
	 Add(8,27398,1,12000000,0,7539,2000);
	 Add(8,27402,1,12000000,0,7539,2000);
	 Add(8,27403,1,12000000,0,7539,2000);
	 Add(8,27404,1,12000000,0,7539,2000);
	 Add(8,27405,1,12000000,0,7539,2000);
	 Add(8,27407,1,12000000,0,7539,2000);
	 Add(8,27408,1,12000000,0,7539,2000);
	 Add(8,27409,1,12000000,0,7539,2000);
	 Add(8,274,1,12000000,0,7539,2000);
	 Add(8,27411,1,12000000,0,7539,2000);
	 Add(8,27412,1,12000000,0,7539,2000);
	 Add(8,27413,1,12000000,0,7539,2000);
	 Add(8,27414,1,12000000,0,7539,2000);
	 Add(8,27416,1,12000000,0,7539,2000);
	 Add(8,27417,1,12000000,0,7539,2000);
	 Add(8,27418,1,12000000,0,7539,2000);
	 Add(8,27419,1,12000000,0,7539,2000);
	 Add(8,27431,1,12000000,0,7539,2000);
	 Add(8,27432,1,12000000,0,7539,2000);
	 Add(8,27433,1,12000000,0,7539,2000);
	 Add(8,27434,1,12000000,0,7539,2000);
	 Add(8,27435,1,12000000,0,7539,2000);
	 Add(8,27436,1,12000000,0,7539,2000);
	 Add(8,27437,1,12000000,0,7539,2000);
	 Add(8,27438,1,12000000,0,7539,2000);
	 Add(8,27439,1,12000000,0,7539,2000);
	 Add(8,27440,1,12000000,0,7539,2000);
	 Add(8,27441,1,12000000,0,7539,2000);
	 Add(8,27442,1,12000000,0,7539,2000);
	 Add(8,27443,1,12000000,0,7539,2000);
	 Add(8,27444,1,12000000,0,7539,2000);
	 Add(8,27445,1,12000000,0,7539,2000);
	 Add(8,27446,1,12000000,0,7539,2000);
	 Add(8,27447,1,12000000,0,7539,2000);
	 Add(8,27448,1,12000000,0,7539,2000);
	 Add(8,27449,1,12000000,0,7539,2000);
	 Add(8,27450,1,12000000,0,7539,2000);
	 Add(8,27451,1,12000000,0,7539,2000);
	 Add(8,27452,1,12000000,0,7539,2000);
	 Add(8,27453,1,12000000,0,7539,2000);
	 Add(8,27454,1,12000000,0,7539,2000);
	 Add(8,27455,1,12000000,0,7539,2000);
	 Add(8,27456,1,12000000,0,7539,2000);
	 Add(8,27457,1,12000000,0,7539,2000);
	 Add(8,27458,1,12000000,0,7539,2000);
	 Add(8,27459,1,12000000,0,7539,2000);
	 Add(8,27460,1,12000000,0,7539,2000);
	 Add(8,27461,1,12000000,0,7539,2000);
	 Add(8,27462,1,12000000,0,7539,2000);
	 Add(8,27463,1,12000000,0,7539,2000);
	 Add(8,27464,1,12000000,0,7539,2000);
	 Add(8,27465,1,12000000,0,7539,2000);
	 Add(8,27466,1,12000000,0,7539,2000);
	 Add(8,27467,1,12000000,0,7539,2000);
	 Add(8,27468,1,12000000,0,7539,2000);
	 Add(8,27469,1,12000000,0,7539,2000);
	 Add(8,27470,1,12000000,0,7539,2000);
	 Add(8,27471,1,12000000,0,7539,2000);
	 Add(8,27472,1,12000000,0,7539,2000);
	 Add(8,27473,1,12000000,0,7539,2000);
	 Add(8,27474,1,12000000,0,7539,2000);
	 Add(8,27475,1,12000000,0,7539,2000);
	 Add(8,27476,1,12000000,0,7539,2000);
	 Add(8,27477,1,12000000,0,7539,2000);
	 Add(8,27478,1,12000000,0,7539,2000);
	 Add(8,27479,1,12000000,0,7539,2000);
	 Add(8,27480,1,12000000,0,7539,2000);
	 Add(8,27481,1,12000000,0,7539,2000);
	 Add(8,27482,1,12000000,0,7539,2000);
	 Add(8,27483,1,12000000,0,7539,2000);
	 Add(8,27484,1,12000000,0,7539,2000);
	 Add(8,27485,1,12000000,0,7539,2000);
	 Add(8,27486,1,12000000,0,7539,2000);
	 Add(8,27487,1,12000000,0,7539,2000);
	 Add(8,27488,1,12000000,0,7539,2000);
	 Add(8,27489,1,12000000,0,7539,2000);
	 Add(8,27490,1,12000000,0,7539,2000);
	 Add(8,27491,1,12000000,0,7539,2000);
	 Add(8,27492,1,12000000,0,7539,2000);
	 Add(8,27493,1,12000000,0,7539,2000);
	 Add(8,27494,1,12000000,0,7539,2000);
	 Add(8,27495,1,12000000,0,7539,2000);
	 Add(8,27496,1,12000000,0,7539,2000);
	 Add(8,27497,1,12000000,0,7539,2000);
	 Add(8,27498,1,12000000,0,7539,2000);
	 Add(8,27499,1,12000000,0,7539,2000);
	 Add(8,27500,1,12000000,0,7539,2000);
	 Add(8,27501,1,12000000,0,7539,2000);
	 Add(8,27502,1,12000000,0,7539,2000);
	 Add(8,27503,1,12000000,0,7539,2000);
	 Add(8,27504,1,12000000,0,7539,2000);
	 Add(8,27505,1,12000000,0,7539,2000);
	 Add(8,27506,1,12000000,0,7539,2000);
	 Add(8,27507,1,12000000,0,7539,2000);
	 Add(8,27508,1,12000000,0,7539,2000);
	 Add(8,27509,1,12000000,0,7539,2000);
	 Add(8,275,1,12000000,0,7539,2000);
	 Add(8,27511,1,12000000,0,7539,2000);
	 Add(8,27523,1,12000000,0,7539,2000);
	 Add(8,27537,1,12000000,0,7539,2000);
	 Add(8,27538,1,12000000,0,7539,2000);
	 Add(8,27539,1,12000000,0,7539,2000);
	 Add(8,27540,1,12000000,0,7539,2000);
	 Add(8,27541,1,12000000,0,7539,2000);
	 Add(8,27542,1,12000000,0,7539,2000);
	 Add(8,27543,1,12000000,0,7539,2000);
	 Add(8,27544,1,12000000,0,7539,2000);
	 Add(8,27545,1,12000000,0,7539,2000);
	 Add(8,27546,1,12000000,0,7539,2000);
	 Add(8,27547,1,12000000,0,7539,2000);
	 Add(8,27548,1,12000000,0,7539,2000);
	 Add(8,27549,1,12000000,0,7539,2000);
	 Add(8,27550,1,12000000,0,7539,2000);
	 Add(8,27551,1,12000000,0,7539,2000);
	 Add(8,27552,1,12000000,0,7539,2000);
	 Add(8,27553,1,12000000,0,7539,2000);
	 Add(8,27554,1,12000000,0,7539,2000);
	 Add(8,27555,1,12000000,0,7539,2000);
	 Add(8,27556,1,12000000,0,7539,2000);
	 Add(8,27557,1,12000000,0,7539,2000);
// -----------------------------------------------------------

	freeloop(0);
	set .menu$,"";
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1) {
		set .menu$, .menu$+.Shops$[.@i]+":";
		npcshopdelitem "qshop"+.@i,909;
	}
	end;

OnMenu:
	set .@size, getarraysize(@i);
	if (!.@size) set .@i, select(.menu$);
	else if (.@size == 1) set .@i, @i[0];
	else {
		for(set .@j,0; .@j<.@size; set .@j,.@j+1)
			set .@menu$, .@menu$+.Shops$[@i[.@j]]+":";
		set .@i, @i[select(.@menu$)-1];
	}
	deletearray @i[0],getarraysize(@i);
	if (.Shops$[.@i] == "") {
		message strcharinfo(0),"An error occured.";
		end;
	}
	dispbottom "Only one item at time.";
	callshop "qshop"+.@i,1;
	npcshopattach "qshop"+.@i;
	end;

OnBuyItem:
	// .@q[] : RewardID, BoughtAmt, RewardAmt, BaseAmt, ReqZeny, ReqPts, { ReqItem, ReqAmt, ... }
	setarray .@q[0],@bought_nameid[0],((@bought_quantity[0] > .MaxStack)?.MaxStack:@bought_quantity[0]);
	copyarray .@q[3],getd(".q_"+.@q[0]+"[0]"),getarraysize(getd(".q_"+.@q[0]));
	set .@q[2],.@q[1]*.@q[3];
	if (!.@q[2] || .@q[2] > 30000) {
		message strcharinfo(0),"You can't buy that many "+getitemname(.@q[0])+".";
		end;
	}
	mes "[Quest Shop]";
	mes "Item: ^0055FF"+((.@q[2] > 1)?.@q[2]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requeriments:";
	if (.@q[4]) mes " > "+Chk(Zeny,.@q[4]*.@q[1])+(.@q[4]*.@q[1])+" Zeny^000000";
	if (.@q[5]) mes " > "+Chk(getd(.Points$[0]),.@q[5]*.@q[1])+(.@q[5]*.@q[1])+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+(.@q[5]*.@q[1])+")^000000";
	if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " >"+Chk(countitem(.@q[.@i]),.@q[.@i+1]*.@q[1])+((.ShowID)?"["+.@q[.@i]+"] - ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+(.@q[.@i+1]*.@q[1])+")^000000";
	next;
	setarray @qe[1], getiteminfo(.@q[0],5), getiteminfo(.@q[0],11);
	if (((@qe[1] & 1) || (@qe[1] & 256) || (@qe[1] & 512)) && @qe[2] > 0)
		set .@preview,1;
	addtimer 1000, strnpcinfo(0)+"::OnEnd";
	while(1) {
		switch(select(" ~ Get ^0055FF"+getitemname(.@q[0])+"^000000:"+((.@preview && !@qe[6])?" ~ Preview...":"")+": ~ ^777777Cancel^000000")) {
		case 1:
			if (@qe[0]) { 
				mes "[Quest Shop]";
				mes "You don't have the needed items.";
				close;
			}
			if (!checkweight(.@q[0],.@q[2])) {
				mes "[Quest Shop]";
				mes "^FF0000You need "+(((.@q[2]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" more weight to complete the transaction.^000000";
				close;
			}
			if (.@q[4]) set Zeny, Zeny-(.@q[4]*.@q[1]);
			if (.@q[5]) setd .Points$[0], getd(.Points$[0])-(.@q[5]*.@q[1]);
			if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
				delitem .@q[.@i],.@q[.@i+1]*.@q[1];
			getitem .@q[0],.@q[2];
			if (.Announce) announce strcharinfo(0)+" created "+((.@q[2] > 1)?.@q[2]+"x "+getitemname(.@q[0]):A_An(getitemname(.@q[0])))+"!",0;
			specialeffect 699;
			close;
		case 2:
			setarray @qe[3], getlook(LOOK_HEAD_BOTTOM), getlook(LOOK_HEAD_TOP), getlook(LOOK_HEAD_MID), 1;
			if (@qe[1] & 1) changelook LOOK_HEAD_BOTTOM, @qe[2];
			if (@qe[1] & 256) changelook LOOK_HEAD_TOP, @qe[2];
			if (@qe[1] & 512) changelook LOOK_HEAD_MID, @qe[2];
			break;
		case 3:
			close;
		}
	}

OnEnd:
	if (@qe[6]) {
		changelook LOOK_HEAD_BOTTOM, @qe[3];
		changelook LOOK_HEAD_TOP, @qe[4];
		changelook LOOK_HEAD_MID, @qe[5];
	}
	deletearray @qe[0],7;
	end;

function Add {
	if (getitemname(getarg(1)) == "null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped).";
		return;
	}
	setarray .@j[0],getarg(2),getarg(3),getarg(4);
	for(set .@i,5; .@i<getargcount(); set .@i,.@i+2) {
		if (getitemname(getarg(.@i)) == "null") {
			debugmes "Quest requirement #"+getarg(.@i)+" invalid (skipped).";
			return;
		} else
			setarray .@j[.@i-2],getarg(.@i),getarg(.@i+1);
	}
	copyarray getd(".q_"+getarg(1)+"[0]"),.@j[0],getarraysize(.@j);
	npcshopadditem "qshop"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return;
}

function Chk {
	if (getarg(0) < getarg(1)) {
		set @qe[0],1;
		return "^FF0000";
	} else
		return "^00FF00";
}

function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot) {
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),2) == 4 || getiteminfo(getarg(0),2) == 5) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$;
	}
}

function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0);
}
}

function	script	qshop	{
	deletearray @i[0],getarraysize(@i);
	for(set .@i,0; .@i<getargcount(); set .@i,.@i+1)
		set @i[.@i],getarg(.@i);
	doevent "quest_shop::OnMenu";
	end;
}


// Dummy shop data -- copy as needed.
//============================================================
-	shop	qshop1	-1,909:-1
-	shop	qshop2	-1,909:-1
-	shop	qshop3	-1,909:-1
-	shop	qshop4	-1,909:-1
-	shop	qshop5	-1,909:-1
-	shop	qshop6	-1,909:-1
-	shop	qshop7	-1,909:-1
-	shop	qshop8	-1,909:-1
-	shop	qshop9	-1,909:-1



prontera,145,162,6	script	Viny	4_F_TAEKWON,{
	if( Class == 4047 ){
	    cutin "arang01",2;
    mes "[Viny]";
	mes "If you want to reset your Feeling or Hatred, you're in the right place.";
	next;
	mes "[Viny]";
	mes "You need 1,500,000z for every reset..";
	next;
	mes "[Viny]";
	mes "Do you want to reset something?";
	next;
	switch(select("No:Yes")){
	case 1:
	mes "[Viny]"; mes "See you!";  close2;  cutin "",255; end;
	
	case 2: break;
	}
    mes "[Viny]";
    mes "What do you want to reset?";
    menu "Feeling",feeling,"Hatred",hatred;

feeling:
    atcommand "@feelreset";
	mes "[Viny]";
    mes "Done!";
	set Zeny, Zeny-1500000;
    close2;
    cutin "",255;
    end;

hatred:
    set PC_HATE_MOB_MOON, 0;
    set PC_HATE_MOB_STAR, 0;
    set PC_HATE_MOB_SUN, 0;
	set Zeny, Zeny-1500000;
    mes "Done!";
    next;
    mes "[Viny]";
    mes "You need to relog.";
    mes "Do you want to relog now?";
    menu "Yes",relog,"No",later;

relog:
    atcommand "@kick "+strcharinfo(0);
    end;

later:
    next;
    mes "[Viny]";
    mes "Good Luck!";
    close2;
    cutin "",255;
    end;

} else {
	mes "[Viny]";
	mes "Lo siento pero solo hablo con Taekwons/Gladiadores!";
	close;
}
}

// prontera,140,180,6	script	luilly	4_PORING,2,2,{
	// mes "[luilly]";
	// mes "what?";
	// close;
	
	// OnTouch:
	// npctalk "ITS MY BENCH GO AWAY !!";
	// end;
// }





// gonryun,37,25,6	script	wtvhatsmarcoblabla	4_PORING,{
// mes "Selecciona un punto para comenzar.";
// input .@shat;
// .@shat = 2045;
// while (1){
	// if ((.@shat >= 2202) && (.@shat <= 2225) || .@shat == 2232 || .@shat == 2159) { 
	// dispbottom "Este hat no funciona: "+.@shat;
	// atcommand "@changelook 0";
	// } else {
		// atcommand "@changelook "+.@shat;
		// dispbottom "Este hat es el numero: "+.@shat;
		// }
	
	// switch(select("Siguiente:Anterior")){
		
		// case 1:
		// .@shat = .@shat+1;
		// break;
		
		
		// case 2:
		// .@shat = .@shat-1;
		// break;
		
	// }

// }

// }1
